// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: crypto/ucan/v1/token.proto

package ucanv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Token represents a UCAN (User Controlled Authorization Network) token
// This is the envelope structure that contains the signature and payload
type Token struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Signature is the raw signature bytes of the payload
	Signature []byte `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	// Payload contains the token content and header
	Payload *TokenPayload `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *Token) Reset() {
	*x = Token{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crypto_ucan_v1_token_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Token) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Token) ProtoMessage() {}

func (x *Token) ProtoReflect() protoreflect.Message {
	mi := &file_crypto_ucan_v1_token_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Token.ProtoReflect.Descriptor instead.
func (*Token) Descriptor() ([]byte, []int) {
	return file_crypto_ucan_v1_token_proto_rawDescGZIP(), []int{0}
}

func (x *Token) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *Token) GetPayload() *TokenPayload {
	if x != nil {
		return x.Payload
	}
	return nil
}

// TokenPayload represents the content of a UCAN token
type TokenPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Header contains information about the token format and version
	Header *TokenHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// UCAN payload content - using string references to avoid import cycles
	//
	// Types that are assignable to Content:
	//
	//	*TokenPayload_Delegation
	//	*TokenPayload_Invocation
	//	*TokenPayload_Receipt
	Content isTokenPayload_Content `protobuf_oneof:"content"`
}

func (x *TokenPayload) Reset() {
	*x = TokenPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crypto_ucan_v1_token_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenPayload) ProtoMessage() {}

func (x *TokenPayload) ProtoReflect() protoreflect.Message {
	mi := &file_crypto_ucan_v1_token_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenPayload.ProtoReflect.Descriptor instead.
func (*TokenPayload) Descriptor() ([]byte, []int) {
	return file_crypto_ucan_v1_token_proto_rawDescGZIP(), []int{1}
}

func (x *TokenPayload) GetHeader() *TokenHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (m *TokenPayload) GetContent() isTokenPayload_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (x *TokenPayload) GetDelegation() []byte {
	if x, ok := x.GetContent().(*TokenPayload_Delegation); ok {
		return x.Delegation
	}
	return nil
}

func (x *TokenPayload) GetInvocation() []byte {
	if x, ok := x.GetContent().(*TokenPayload_Invocation); ok {
		return x.Invocation
	}
	return nil
}

func (x *TokenPayload) GetReceipt() []byte {
	if x, ok := x.GetContent().(*TokenPayload_Receipt); ok {
		return x.Receipt
	}
	return nil
}

type isTokenPayload_Content interface {
	isTokenPayload_Content()
}

type TokenPayload_Delegation struct {
	// Delegation represents a delegation of authority
	Delegation []byte `protobuf:"bytes,2,opt,name=delegation,proto3,oneof"`
}

type TokenPayload_Invocation struct {
	// Invocation represents a request to execute a capability
	Invocation []byte `protobuf:"bytes,3,opt,name=invocation,proto3,oneof"`
}

type TokenPayload_Receipt struct {
	// Receipt represents a response to an invocation
	Receipt []byte `protobuf:"bytes,4,opt,name=receipt,proto3,oneof"`
}

func (*TokenPayload_Delegation) isTokenPayload_Content() {}

func (*TokenPayload_Invocation) isTokenPayload_Content() {}

func (*TokenPayload_Receipt) isTokenPayload_Content() {}

// TokenHeader contains metadata about the token format
type TokenHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Version of the UCAN specification (e.g., "1.0.0-rc.1")
	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	// Algorithm used for the signature (e.g., "Ed25519", "P-256", "secp256k1")
	Algorithm string `protobuf:"bytes,2,opt,name=algorithm,proto3" json:"algorithm,omitempty"`
}

func (x *TokenHeader) Reset() {
	*x = TokenHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crypto_ucan_v1_token_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenHeader) ProtoMessage() {}

func (x *TokenHeader) ProtoReflect() protoreflect.Message {
	mi := &file_crypto_ucan_v1_token_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenHeader.ProtoReflect.Descriptor instead.
func (*TokenHeader) Descriptor() ([]byte, []int) {
	return file_crypto_ucan_v1_token_proto_rawDescGZIP(), []int{2}
}

func (x *TokenHeader) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *TokenHeader) GetAlgorithm() string {
	if x != nil {
		return x.Algorithm
	}
	return ""
}

// Proof is a reference to another UCAN token that proves authority
// It can be either a CID or the entire token
type Proof struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Proof:
	//
	//	*Proof_Cid
	//	*Proof_Token
	Proof isProof_Proof `protobuf_oneof:"proof"`
}

func (x *Proof) Reset() {
	*x = Proof{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crypto_ucan_v1_token_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Proof) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Proof) ProtoMessage() {}

func (x *Proof) ProtoReflect() protoreflect.Message {
	mi := &file_crypto_ucan_v1_token_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Proof.ProtoReflect.Descriptor instead.
func (*Proof) Descriptor() ([]byte, []int) {
	return file_crypto_ucan_v1_token_proto_rawDescGZIP(), []int{3}
}

func (m *Proof) GetProof() isProof_Proof {
	if m != nil {
		return m.Proof
	}
	return nil
}

func (x *Proof) GetCid() string {
	if x, ok := x.GetProof().(*Proof_Cid); ok {
		return x.Cid
	}
	return ""
}

func (x *Proof) GetToken() *Token {
	if x, ok := x.GetProof().(*Proof_Token); ok {
		return x.Token
	}
	return nil
}

type isProof_Proof interface {
	isProof_Proof()
}

type Proof_Cid struct {
	// CID (Content Identifier) of a UCAN token
	Cid string `protobuf:"bytes,1,opt,name=cid,proto3,oneof"`
}

type Proof_Token struct {
	// Embedded UCAN token
	Token *Token `protobuf:"bytes,2,opt,name=token,proto3,oneof"`
}

func (*Proof_Cid) isProof_Proof() {}

func (*Proof_Token) isProof_Proof() {}

var File_crypto_ucan_v1_token_proto protoreflect.FileDescriptor

var file_crypto_ucan_v1_token_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2f, 0x75, 0x63, 0x61, 0x6e, 0x2f, 0x76, 0x31,
	0x2f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x6f, 0x2e, 0x75, 0x63, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x22, 0x5d, 0x0a, 0x05,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x12, 0x36, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x75, 0x63,
	0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0xae, 0x01, 0x0a, 0x0c,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x33, 0x0a, 0x06,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x75, 0x63, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x12, 0x20, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0a, 0x69, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x0a, 0x69, 0x6e, 0x76, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x07, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70,
	0x74, 0x42, 0x09, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x45, 0x0a, 0x0b,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74,
	0x68, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69,
	0x74, 0x68, 0x6d, 0x22, 0x53, 0x0a, 0x05, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x12, 0x0a, 0x03,
	0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x63, 0x69, 0x64,
	0x12, 0x2d, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x75, 0x63, 0x61, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x48, 0x00, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x42,
	0x07, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x42, 0x30, 0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x6e, 0x72, 0x2d, 0x69, 0x6f, 0x2f, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x6f, 0x2f, 0x75, 0x63, 0x61, 0x6e, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2f, 0x76, 0x31, 0x3b, 0x75, 0x63, 0x61, 0x6e, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_crypto_ucan_v1_token_proto_rawDescOnce sync.Once
	file_crypto_ucan_v1_token_proto_rawDescData = file_crypto_ucan_v1_token_proto_rawDesc
)

func file_crypto_ucan_v1_token_proto_rawDescGZIP() []byte {
	file_crypto_ucan_v1_token_proto_rawDescOnce.Do(func() {
		file_crypto_ucan_v1_token_proto_rawDescData = protoimpl.X.CompressGZIP(file_crypto_ucan_v1_token_proto_rawDescData)
	})
	return file_crypto_ucan_v1_token_proto_rawDescData
}

var file_crypto_ucan_v1_token_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_crypto_ucan_v1_token_proto_goTypes = []interface{}{
	(*Token)(nil),        // 0: crypto.ucan.v1.Token
	(*TokenPayload)(nil), // 1: crypto.ucan.v1.TokenPayload
	(*TokenHeader)(nil),  // 2: crypto.ucan.v1.TokenHeader
	(*Proof)(nil),        // 3: crypto.ucan.v1.Proof
}
var file_crypto_ucan_v1_token_proto_depIdxs = []int32{
	1, // 0: crypto.ucan.v1.Token.payload:type_name -> crypto.ucan.v1.TokenPayload
	2, // 1: crypto.ucan.v1.TokenPayload.header:type_name -> crypto.ucan.v1.TokenHeader
	0, // 2: crypto.ucan.v1.Proof.token:type_name -> crypto.ucan.v1.Token
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_crypto_ucan_v1_token_proto_init() }
func file_crypto_ucan_v1_token_proto_init() {
	if File_crypto_ucan_v1_token_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_crypto_ucan_v1_token_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Token); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crypto_ucan_v1_token_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crypto_ucan_v1_token_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crypto_ucan_v1_token_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Proof); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_crypto_ucan_v1_token_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*TokenPayload_Delegation)(nil),
		(*TokenPayload_Invocation)(nil),
		(*TokenPayload_Receipt)(nil),
	}
	file_crypto_ucan_v1_token_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*Proof_Cid)(nil),
		(*Proof_Token)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_crypto_ucan_v1_token_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_crypto_ucan_v1_token_proto_goTypes,
		DependencyIndexes: file_crypto_ucan_v1_token_proto_depIdxs,
		MessageInfos:      file_crypto_ucan_v1_token_proto_msgTypes,
	}.Build()
	File_crypto_ucan_v1_token_proto = out.File
	file_crypto_ucan_v1_token_proto_rawDesc = nil
	file_crypto_ucan_v1_token_proto_goTypes = nil
	file_crypto_ucan_v1_token_proto_depIdxs = nil
}
